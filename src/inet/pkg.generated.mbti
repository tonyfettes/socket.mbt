// Generated using `moon info`, DON'T EDIT IT
package "tonyfettes/socket/inet"

import(
  "tonyfettes/socket"
)

// Values
fn addr(Byte, Byte, Byte, Byte) -> Addr

let family : Int

fn sockaddr(Addr, UInt16) -> Sockaddr

fn socket(@socket.Type, Protocol) -> @socket.Socket

// Errors

// Types and methods
type Addr
fn Addr::new(Byte, Byte, Byte, Byte) -> Self
impl Show for Addr
impl ToJson for Addr

pub(all) enum Protocol {
  HOPOPT
  ICMP
  IGMP
  GGP
  IPV4
  ST
  TCP
  CBT
  EGP
  IGP
  PUP
  UDP
  IDP
  RDP
  IPV6
}

type Sockaddr
fn Sockaddr::addr(Self) -> Addr
fn Sockaddr::new(Addr, UInt16) -> Self
fn Sockaddr::port(Self) -> UInt16
impl ToJson for Sockaddr
impl @socket.ToSockaddr for Sockaddr

// Type aliases

// Traits

